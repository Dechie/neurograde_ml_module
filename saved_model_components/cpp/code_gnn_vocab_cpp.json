{
    "node_type_to_id": {
        "<UNK_TYPE>": 0,
        "translation_unit": 1,
        "preproc_include": 2,
        "#include": 3,
        "system_lib_string": 4,
        "using_declaration": 5,
        "using": 6,
        "namespace": 7,
        "identifier": 8,
        ";": 9,
        "function_definition": 10,
        "primitive_type": 11,
        "function_declarator": 12,
        "parameter_list": 13,
        "(": 14,
        ")": 15,
        "compound_statement": 16,
        "{": 17,
        "declaration": 18,
        ",": 19,
        "array_declarator": 20,
        "[": 21,
        "number_literal": 22,
        "]": 23,
        "expression_statement": 24,
        "binary_expression": 25,
        ">>": 26,
        "for_statement": 27,
        "for": 28,
        "init_declarator": 29,
        "=": 30,
        "<": 31,
        "update_expression": 32,
        "++": 33,
        "subscript_expression": 34,
        "subscript_argument_list": 35,
        "assignment_expression": 36,
        "+=": 37,
        "}": 38,
        "+": 39,
        "-": 40,
        "<<": 41,
        "return_statement": 42,
        "return": 43,
        "type_definition": 44,
        "typedef": 45,
        "sized_type_specifier": 46,
        "long": 47,
        "unsigned": 48,
        "type_identifier": 49,
        "template_type": 50,
        "template_argument_list": 51,
        "type_descriptor": 52,
        ">": 53,
        "preproc_def": 54,
        "#define": 55,
        "preproc_arg": 56,
        "alias_declaration": 57,
        "parameter_declaration": 58,
        "if_statement": 59,
        "if": 60,
        "condition_clause": 61,
        "==": 62,
        "call_expression": 63,
        "argument_list": 64,
        "%": 65,
        "type_qualifier": 66,
        "const": 67,
        "reference_declarator": 68,
        "&": 69,
        "parenthesized_expression": 70,
        "*": 71,
        "<=": 72,
        "/": 73,
        "field_expression": 74,
        ".": 75,
        "field_identifier": 76,
        "%=": 77,
        "while_statement": 78,
        "while": 79,
        ">>=": 80,
        "!=": 81,
        "-=": 82,
        "else_clause": 83,
        "else": 84,
        "--": 85,
        "||": 86,
        "preproc_function_def": 87,
        "preproc_params": 88,
        "ERROR": 89,
        "#ifdef": 90,
        "preproc_call": 91,
        "preproc_directive": 92,
        "qualified_identifier": 93,
        "namespace_identifier": 94,
        "::": 95,
        "pointer_declarator": 96,
        "switch_statement": 97,
        "switch": 98,
        "case_statement": 99,
        "case": 100,
        ":": 101,
        "break_statement": 102,
        "break": 103,
        "string_literal": 104,
        "\"": 105,
        "string_content": 106,
        "escape_sequence": 107,
        "#ifndef": 108,
        "char_literal": 109,
        "'": 110,
        "character": 111,
        "struct_specifier": 112,
        "struct": 113,
        "field_declaration_list": 114,
        "field_declaration": 115,
        "field_initializer_list": 116,
        "field_initializer": 117,
        ">=": 118,
        "/=": 119,
        "initializer_list": 120,
        "cast_expression": 121,
        "import_declaration": 122,
        "import": 123,
        "module_name": 124,
        "comma_expression": 125,
        "concatenated_string": 126,
        "null": 127,
        "nullptr": 128,
        "false": 129,
        "for_range_loop": 130,
        "placeholder_type_specifier": 131,
        "auto": 132,
        "&&": 133,
        "constexpr": 134,
        "pointer_expression": 135,
        "true": 136,
        "template_function": 137,
        "storage_class_specifier": 138,
        "inline": 139,
        "template_declaration": 140,
        "template": 141,
        "template_parameter_list": 142,
        "type_parameter_declaration": 143,
        "class": 144,
        "conditional_expression": 145,
        "?": 146,
        "unary_expression": 147,
        "!": 148,
        "new_expression": 149,
        "new": 150,
        "new_declarator": 151,
        "continue_statement": 152,
        "continue": 153,
        "*=": 154,
        "...": 155,
        "signed": 156,
        "abstract_function_declarator": 157,
        "lambda_expression": 158,
        "lambda_capture_specifier": 159,
        "lambda_default_capture": 160,
        "lambda_declarator": 161,
        "->": 162,
        "&=": 163,
        "|=": 164,
        "do_statement": 165,
        "do": 166,
        "typename": 167,
        ".*": 168,
        "class_specifier": 169,
        "access_specifier": 170,
        "public": 171,
        "static": 172,
        "^=": 173,
        "namespace_definition": 174,
        "declaration_list": 175,
        "abstract_reference_declarator": 176,
        "variadic_type_parameter_declaration": 177,
        "variadic_parameter_declaration": 178,
        "variadic_declarator": 179,
        "parameter_pack_expansion": 180,
        "operator_name": 181,
        "operator": 182,
        "sizeof_expression": 183,
        "sizeof": 184,
        "optional_type_parameter_declaration": 185,
        "dependent_type": 186,
        "optional_parameter_declaration": 187,
        "user_defined_literal": 188,
        "literal_suffix": 189,
        "preproc_ifdef": 190,
        "preproc_else": 191,
        "#else": 192,
        "#endif": 193,
        "^": 194,
        "()": 195,
        "abstract_pointer_declarator": 196,
        "protected": 197,
        "virtual": 198,
        "base_class_clause": 199,
        "template_method": 200,
        "virtual_specifier": 201,
        "override": 202,
        "this": 203,
        "[]": 204,
        "decltype": 205,
        "attribute_declaration": 206,
        "[[": 207,
        "attribute": 208,
        "]]": 209,
        "throw_statement": 210,
        "throw": 211,
        "|": 212,
        "short": 213,
        "<<=": 214,
        "NULL": 215,
        "compound_literal_expression": 216,
        "~": 217,
        "private": 218,
        "#if": 219,
        "destructor_name": 220,
        "delete_expression": 221,
        "delete": 222,
        "default": 223,
        "and": 224,
        "not": 225,
        "abstract_array_declarator": 226,
        "structured_binding_declarator": 227,
        "explicit_function_specifier": 228,
        "explicit": 229,
        "trailing_return_type": 230,
        "or": 231,
        "gnu_asm_expression": 232,
        "__asm__": 233,
        "gnu_asm_qualifier": 234,
        "volatile": 235,
        "gnu_asm_output_operand_list": 236,
        "gnu_asm_output_operand": 237,
        "enum_specifier": 238,
        "enum": 239,
        "enumerator_list": 240,
        "enumerator": 241,
        "noexcept": 242,
        "try_statement": 243,
        "try": 244,
        "catch_clause": 245,
        "catch": 246,
        "labeled_statement": 247,
        "statement_identifier": 248,
        "friend_declaration": 249,
        "friend": 250,
        "default_method_clause": 251,
        "goto_statement": 252,
        "goto": 253,
        "preproc_defined": 254,
        "defined": 255,
        "operator_cast": 256,
        "\"\"": 257,
        "parenthesized_declarator": 258,
        "register": 259,
        "delete_method_clause": 260,
        "namespace_alias_definition": 261,
        "nested_namespace_specifier": 262,
        "union_specifier": 263,
        "union": 264,
        "init_statement": 265,
        "static_assert_declaration": 266,
        "static_assert": 267,
        "mutable": 268,
        "__asm": 269,
        "raw_string_literal": 270,
        "R\"": 271,
        "raw_string_content": 272,
        "fold_expression": 273,
        "pure_virtual_clause": 274,
        "xor": 275,
        "abstract_parenthesized_declarator": 276,
        "module_partition": 277,
        "asm": 278,
        "gnu_asm_input_operand_list": 279,
        "gnu_asm_input_operand": 280,
        "module_declaration": 281,
        "module": 282,
        "template_template_parameter_declaration": 283,
        "initializer_pair": 284,
        "field_designator": 285,
        "final": 286,
        "lambda_capture_initializer": 287,
        "__inline": 288,
        "attribute_specifier": 289,
        "__attribute__": 290,
        "noreturn": 291
    },
    "next_node_type_id": 292,
    "node_vocab_size": 2000
}