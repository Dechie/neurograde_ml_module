{
    "node_type_to_id": {
        "<UNK_TYPE>": 0,
        "translation_unit": 1,
        "preproc_include": 2,
        "#include": 3,
        "system_lib_string": 4,
        "using_declaration": 5,
        "using": 6,
        "namespace": 7,
        "identifier": 8,
        ";": 9,
        "function_definition": 10,
        "primitive_type": 11,
        "function_declarator": 12,
        "parameter_list": 13,
        "(": 14,
        ")": 15,
        "compound_statement": 16,
        "{": 17,
        "declaration": 18,
        ",": 19,
        "expression_statement": 20,
        "binary_expression": 21,
        ">>": 22,
        "if_statement": 23,
        "if": 24,
        "condition_clause": 25,
        "<": 26,
        "<<": 27,
        "string_literal": 28,
        "\"": 29,
        "string_content": 30,
        "}": 31,
        "else_clause": 32,
        "else": 33,
        ">": 34,
        "==": 35,
        "return_statement": 36,
        "return": 37,
        "number_literal": 38,
        "preproc_function_def": 39,
        "#define": 40,
        "preproc_params": 41,
        "preproc_arg": 42,
        "type_definition": 43,
        "typedef": 44,
        "sized_type_specifier": 45,
        "long": 46,
        "type_identifier": 47,
        "preproc_def": 48,
        "unsigned": 49,
        "template_type": 50,
        "template_argument_list": 51,
        "type_descriptor": 52,
        ">=": 53,
        "assignment_expression": 54,
        "=": 55,
        "<=": 56,
        "-": 57,
        "parameter_declaration": 58,
        "init_declarator": 59,
        "for_statement": 60,
        "for": 61,
        "update_expression": 62,
        "++": 63,
        "call_expression": 64,
        "field_expression": 65,
        ".": 66,
        "field_identifier": 67,
        "argument_list": 68,
        "+": 69,
        "break_statement": 70,
        "break": 71,
        "&&": 72,
        "parenthesized_expression": 73,
        "array_declarator": 74,
        "[": 75,
        "]": 76,
        "subscript_expression": 77,
        "subscript_argument_list": 78,
        "type_qualifier": 79,
        "const": 80,
        "struct_specifier": 81,
        "struct": 82,
        "field_declaration_list": 83,
        "field_declaration": 84,
        "optional_parameter_declaration": 85,
        "field_initializer_list": 86,
        ":": 87,
        "field_initializer": 88,
        "while_statement": 89,
        "while": 90,
        "*=": 91,
        "*": 92,
        "+=": 93,
        "||": 94,
        "/": 95,
        "null": 96,
        "nullptr": 97,
        "qualified_identifier": 98,
        "namespace_identifier": 99,
        "::": 100,
        "false": 101,
        "alias_declaration": 102,
        "unary_expression": 103,
        "%": 104,
        "!": 105,
        "pointer_expression": 106,
        "&": 107,
        "escape_sequence": 108,
        "class_specifier": 109,
        "class": 110,
        "reference_declarator": 111,
        "access_specifier": 112,
        "public": 113,
        "template_declaration": 114,
        "template": 115,
        "template_parameter_list": 116,
        "type_parameter_declaration": 117,
        "storage_class_specifier": 118,
        "inline": 119,
        "operator_name": 120,
        "operator": 121,
        "this": 122,
        "destructor_name": 123,
        "~": 124,
        "char_literal": 125,
        "'": 126,
        "character": 127,
        "placeholder_type_specifier": 128,
        "auto": 129,
        "trailing_return_type": 130,
        "->": 131,
        "true": 132,
        "initializer_list": 133,
        "noreturn": 134,
        "parenthesized_declarator": 135,
        "for_range_loop": 136,
        "!=": 137,
        "comma_expression": 138,
        "cast_expression": 139,
        "--": 140,
        "conditional_expression": 141,
        "?": 142,
        "private": 143,
        "template_function": 144,
        "-=": 145,
        "static": 146,
        "pointer_declarator": 147,
        "labeled_statement": 148,
        "statement_identifier": 149,
        "goto_statement": 150,
        "goto": 151,
        "/=": 152,
        "typename": 153,
        "continue_statement": 154,
        "continue": 155,
        "<<=": 156,
        ">>=": 157,
        "|=": 158,
        "|": 159,
        "abstract_function_declarator": 160,
        "lambda_expression": 161,
        "lambda_capture_specifier": 162,
        "lambda_default_capture": 163,
        "lambda_declarator": 164,
        "^": 165,
        "signed": 166,
        "^=": 167,
        "optional_type_parameter_declaration": 168,
        "()": 169,
        "preproc_ifdef": 170,
        "#ifdef": 171,
        "#endif": 172,
        "ERROR": 173,
        "preproc_call": 174,
        "preproc_directive": 175,
        "abstract_pointer_declarator": 176,
        "sizeof_expression": 177,
        "sizeof": 178,
        "...": 179,
        "new_expression": 180,
        "new": 181,
        "new_declarator": 182,
        "%=": 183,
        "base_class_clause": 184,
        "template_method": 185,
        "[]": 186,
        "NULL": 187,
        "and": 188,
        "or": 189,
        "delete_expression": 190,
        "delete": 191,
        "variadic_type_parameter_declaration": 192,
        "variadic_parameter_declaration": 193,
        "variadic_declarator": 194,
        "parameter_pack_expansion": 195,
        "not": 196,
        "enum_specifier": 197,
        "enum": 198,
        "enumerator_list": 199,
        "enumerator": 200,
        "constexpr": 201,
        "&=": 202,
        "virtual": 203,
        "switch_statement": 204,
        "switch": 205,
        "case_statement": 206,
        "case": 207,
        "dependent_type": 208,
        "structured_binding_declarator": 209,
        "namespace_alias_definition": 210,
        "nested_namespace_specifier": 211,
        "friend_declaration": 212,
        "friend": 213,
        "noexcept": 214,
        "explicit_function_specifier": 215,
        "explicit": 216,
        "compound_literal_expression": 217,
        "#if": 218,
        "#ifndef": 219,
        "abstract_array_declarator": 220,
        "do_statement": 221,
        "do": 222,
        "namespace_definition": 223,
        "declaration_list": 224,
        "preproc_else": 225,
        "#else": 226,
        "import_declaration": 227,
        "import": 228,
        "module_name": 229,
        "short": 230,
        "preproc_defined": 231,
        "defined": 232,
        "decltype": 233,
        "concatenated_string": 234,
        "register": 235,
        "user_defined_literal": 236,
        "literal_suffix": 237,
        "abstract_reference_declarator": 238,
        "operator_cast": 239,
        "gnu_asm_expression": 240,
        "__asm__": 241,
        "gnu_asm_qualifier": 242,
        "volatile": 243,
        "gnu_asm_output_operand_list": 244,
        "gnu_asm_output_operand": 245,
        "default": 246,
        "#elif": 247,
        "protected": 248,
        "virtual_specifier": 249,
        "override": 250,
        "throw_statement": 251,
        "throw": 252,
        "asm": 253,
        "gnu_asm_input_operand_list": 254,
        "gnu_asm_input_operand": 255,
        "\"\"": 256,
        "default_method_clause": 257,
        "abstract_parenthesized_declarator": 258,
        "union_specifier": 259,
        "union": 260,
        "fold_expression": 261,
        "dependent_name": 262
    },
    "next_node_type_id": 263,
    "node_vocab_size": 2000
}