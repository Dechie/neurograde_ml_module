{
    "node_type_to_id": {
        "<UNK_TYPE>": 0,
        "program": 1,
        "import_declaration": 2,
        "import": 3,
        "scoped_identifier": 4,
        "identifier": 5,
        ".": 6,
        ";": 7,
        "class_declaration": 8,
        "modifiers": 9,
        "public": 10,
        "class": 11,
        "class_body": 12,
        "{": 13,
        "method_declaration": 14,
        "static": 15,
        "void_type": 16,
        "formal_parameters": 17,
        "(": 18,
        "formal_parameter": 19,
        "array_type": 20,
        "type_identifier": 21,
        "dimensions": 22,
        "[": 23,
        "]": 24,
        ")": 25,
        "throws": 26,
        "block": 27,
        "local_variable_declaration": 28,
        "variable_declarator": 29,
        "=": 30,
        "object_creation_expression": 31,
        "new": 32,
        "argument_list": 33,
        "field_access": 34,
        "generic_type": 35,
        "type_arguments": 36,
        "<": 37,
        ">": 38,
        "method_invocation": 39,
        "while_statement": 40,
        "while": 41,
        "parenthesized_expression": 42,
        "unary_expression": 43,
        "!": 44,
        "string_literal": 45,
        "\"": 46,
        "expression_statement": 47,
        "assignment_expression": 48,
        "}": 49,
        "enhanced_for_statement": 50,
        "for": 51,
        ":": 52,
        "string_fragment": 53,
        "floating_point_type": 54,
        "double": 55,
        "array_access": 56,
        "decimal_integer_literal": 57,
        "binary_expression": 58,
        "*": 59,
        "-": 60,
        "/": 61,
        ",": 62,
        "+": 63,
        "asterisk": 64,
        "integral_type": 65,
        "long": 66,
        "cast_expression": 67,
        "int": 68,
        "for_statement": 69,
        "<=": 70,
        "update_expression": 71,
        "++": 72,
        "if_statement": 73,
        "if": 74,
        "%": 75,
        "==": 76,
        "return_statement": 77,
        "return": 78,
        "/=": 79,
        "array_initializer": 80,
        "&&": 81,
        "||": 82,
        "else": 83,
        "array_creation_expression": 84,
        "dimensions_expr": 85,
        "+=": 86,
        "!=": 87,
        "null_literal": 88,
        ">=": 89,
        "--": 90,
        "-=": 91,
        "break_statement": 92,
        "break": 93,
        "field_declaration": 94,
        "boolean_type": 95,
        "false": 96,
        "true": 97,
        "private": 98,
        "final": 99,
        "byte": 100,
        "try_statement": 101,
        "try": 102,
        "catch_clause": 103,
        "catch": 104,
        "catch_formal_parameter": 105,
        "catch_type": 106,
        "throw_statement": 107,
        "throw": 108,
        "character_literal": 109,
        "*=": 110,
        "ternary_expression": 111,
        "?": 112,
        "%=": 113,
        "constructor_declaration": 114,
        "constructor_body": 115,
        "char": 116,
        "float": 117,
        "super_interfaces": 118,
        "implements": 119,
        "type_list": 120,
        "marker_annotation": 121,
        "@": 122,
        "try_with_resources_statement": 123,
        "resource_specification": 124,
        "resource": 125,
        "this": 126,
        "continue_statement": 127,
        "continue": 128,
        "finally_clause": 129,
        "finally": 130,
        "decimal_floating_point_literal": 131,
        "annotation": 132,
        "annotation_argument_list": 133,
        "lambda_expression": 134,
        "inferred_parameters": 135,
        "->": 136,
        "explicit_constructor_invocation": 137,
        "spread_parameter": 138,
        "...": 139,
        "type_parameters": 140,
        "type_parameter": 141,
        "superclass": 142,
        "extends": 143,
        "super": 144,
        "type_bound": 145,
        "do_statement": 146,
        "do": 147,
        "protected": 148,
        "instanceof_expression": 149,
        "instanceof": 150,
        "escape_sequence": 151,
        "short": 152,
        "wildcard": 153,
        "enum_declaration": 154,
        "enum": 155,
        "enum_body": 156,
        "enum_constant": 157,
        "enum_body_declarations": 158,
        "^": 159,
        "interface_declaration": 160,
        "interface": 161,
        "extends_interfaces": 162,
        "interface_body": 163,
        "default": 164,
        ">>=": 165,
        "&": 166,
        "transient": 167,
        "|=": 168,
        ">>>=": 169,
        ">>": 170,
        "hex_integer_literal": 171,
        "<<=": 172,
        "<<": 173,
        "scoped_type_identifier": 174,
        ">>>": 175,
        "switch_expression": 176,
        "switch": 177,
        "switch_block": 178,
        "switch_block_statement_group": 179,
        "switch_label": 180,
        "case": 181,
        "method_reference": 182,
        "::": 183,
        "|": 184,
        "labeled_statement": 185,
        "~": 186,
        "package_declaration": 187,
        "package": 188,
        "assert_statement": 189,
        "assert": 190,
        "class_literal": 191,
        "octal_integer_literal": 192,
        "ERROR": 193,
        "^=": 194,
        "static_initializer": 195,
        "&=": 196,
        "abstract": 197,
        "volatile": 198,
        "constant_declaration": 199,
        "compact_constructor_declaration": 200,
        "synchronized_statement": 201,
        "synchronized": 202,
        "underscore_pattern": 203,
        "element_value_array_initializer": 204,
        "hex_floating_point_literal": 205,
        "binary_integer_literal": 206
    },
    "next_node_type_id": 207,
    "node_vocab_size": 2000
}