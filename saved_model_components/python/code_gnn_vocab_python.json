{
    "node_type_to_id": {
        "<UNK_TYPE>": 0,
        "ERROR": 1,
        "import_statement": 2,
        "import": 3,
        "dotted_name": 4,
        "identifier": 5,
        "function_definition": 6,
        "def": 7,
        "parameters": 8,
        "(": 9,
        ")": 10,
        ":": 11,
        "block": 12,
        "expression_statement": 13,
        "assignment": 14,
        "=": 15,
        "call": 16,
        "argument_list": 17,
        "list": 18,
        "[": 19,
        "integer": 20,
        ",": 21,
        "]": 22,
        "for": 23,
        "in": 24,
        "if": 25,
        "comparison_operator": 26,
        "subscript": 27,
        "==": 28,
        "string": 29,
        "string_start": 30,
        "string_content": 31,
        "string_end": 32,
        "binary_operator": 33,
        "+": 34,
        "unary_operator": 35,
        "-": 36,
        "boolean_operator": 37,
        "and": 38,
        "else": 39,
        "attribute": 40,
        ".": 41,
        "type": 42,
        "constrained_type": 43,
        "keyword_argument": 44,
        "<<": 45,
        "parenthesized_expression": 46,
        "*": 47,
        "slice": 48,
        "return": 49,
        "+=": 50,
        ">>=": 51,
        "<": 52,
        "&": 53,
        "module": 54,
        "for_statement": 55,
        "<=": 56,
        "list_comprehension": 57,
        "for_in_clause": 58,
        "%": 59,
        "!=": 60,
        "pattern_list": 61,
        ">": 62,
        "conditional_expression": 63,
        "elif": 64,
        "return_statement": 65,
        "escape_sequence": 66,
        "none": 67,
        "list_pattern": 68,
        "/": 69,
        "augmented_assignment": 70,
        "break": 71,
        "print": 72,
        "import_from_statement": 73,
        "from": 74,
        "**": 75,
        "lambda": 76,
        "lambda_parameters": 77,
        "generic_type": 78,
        "type_parameter": 79,
        "_": 80,
        "aliased_import": 81,
        "as": 82,
        "expression_list": 83,
        "or": 84,
        ">=": 85,
        "generator_expression": 86,
        "while_statement": 87,
        "while": 88,
        "continue": 89,
        "tuple": 90,
        "-=": 91,
        "pass": 92,
        "is not": 93,
        "is": 94,
        "not": 95,
        "print_statement": 96,
        "class_definition": 97,
        "class": 98,
        "true": 99,
        "delete_statement": 100,
        "del": 101,
        "not in": 102,
        "float": 103,
        "%=": 104,
        "*=": 105,
        "false": 106,
        "if_clause": 107,
        "not_operator": 108,
        ";": 109,
        "{": 110,
        ">>": 111,
        "}": 112,
        "concatenated_string": 113,
        "dictionary": 114,
        "list_splat": 115,
        "^": 116,
        "set": 117,
        "default_parameter": 118,
        "continue_statement": 119,
        "member_type": 120,
        "typed_parameter": 121,
        "->": 122,
        "global_statement": 123,
        "global": 124,
        "break_statement": 125,
        "wildcard_import": 126,
        "if_statement": 127,
        "tuple_pattern": 128,
        "list_splat_pattern": 129,
        "as_pattern": 130,
        "as_pattern_target": 131,
        "~": 132,
        "|": 133,
        "try": 134,
        "yield": 135,
        "^=": 136,
        "pair": 137,
        "type_conversion": 138,
        "interpolation": 139,
        "ellipsis": 140,
        "/=": 141,
        "dictionary_comprehension": 142,
        "assert_statement": 143,
        "assert": 144,
        "@": 145,
        "nonlocal_statement": 146,
        "nonlocal": 147,
        "set_comprehension": 148,
        "**=": 149,
        "match": 150,
        "decorator": 151,
        "named_expression": 152,
        ":=": 153,
        "raise": 154,
        "except": 155,
        "future_import_statement": 156,
        "__future__": 157,
        "dictionary_splat": 158,
        "raise_statement": 159,
        "<<=": 160,
        "dictionary_splat_pattern": 161,
        "|=": 162,
        "format_specifier": 163,
        "pass_statement": 164,
        "case": 165,
        "\\": 166,
        "&=": 167,
        "typed_default_parameter": 168,
        "finally": 169,
        "type_alias_statement": 170,
        "<>": 171,
        "keyword_separator": 172,
        "with_statement": 173,
        "with": 174,
        "with_clause": 175,
        "with_item": 176,
        "chevron": 177,
        "splat_type": 178,
        "parenthesized_list_splat": 179
    },
    "next_node_type_id": 180,
    "node_vocab_size": 2000
}