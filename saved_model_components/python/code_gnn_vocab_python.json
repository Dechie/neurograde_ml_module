{
    "node_type_to_id": {
        "<UNK_TYPE>": 0,
        "module": 1,
        "import_statement": 2,
        "import": 3,
        "dotted_name": 4,
        "identifier": 5,
        "import_from_statement": 6,
        "from": 7,
        "function_definition": 8,
        "def": 9,
        "parameters": 10,
        "(": 11,
        ")": 12,
        ":": 13,
        "block": 14,
        "return_statement": 15,
        "return": 16,
        "call": 17,
        "attribute": 18,
        ".": 19,
        "argument_list": 20,
        "ERROR": 21,
        "=": 22,
        "if": 23,
        "comparison_operator": 24,
        "subscript": 25,
        "[": 26,
        "integer": 27,
        "]": 28,
        "==": 29,
        "unary_operator": 30,
        "-": 31,
        "string": 32,
        "string_start": 33,
        "string_content": 34,
        "string_end": 35,
        "else": 36,
        "expression_statement": 37,
        "assignment": 38,
        "list_comprehension": 39,
        "for_in_clause": 40,
        "for": 41,
        "in": 42,
        "keyword_argument": 43,
        "true": 44,
        "for_statement": 45,
        ",": 46,
        "binary_operator": 47,
        "list": 48,
        "*": 49,
        "default_parameter": 50,
        "**": 51,
        "type": 52,
        "constrained_type": 53,
        "none": 54,
        "+": 55,
        "boolean_operator": 56,
        "and": 57,
        "!=": 58,
        "<": 59,
        "list_splat": 60,
        "+=": 61,
        "conditional_expression": 62,
        "false": 63,
        "pattern_list": 64,
        ">": 65,
        "augmented_assignment": 66,
        "typed_parameter": 67,
        "slice": 68,
        "parenthesized_expression": 69,
        "yield": 70,
        "class_definition": 71,
        "class": 72,
        "<<": 73,
        "expression_list": 74,
        "tuple": 75,
        ">=": 76,
        "continue": 77,
        "break": 78,
        "escape_sequence": 79,
        "/": 80,
        "lambda": 81,
        "lambda_parameters": 82,
        "%": 83,
        "<=": 84,
        "aliased_import": 85,
        "as": 86,
        "list_pattern": 87,
        "-=": 88,
        "wildcard_import": 89,
        "while": 90,
        "print_statement": 91,
        "print": 92,
        "elif": 93,
        "tuple_pattern": 94,
        "_": 95,
        "not_operator": 96,
        "not": 97,
        "or": 98,
        "while_statement": 99,
        "float": 100,
        "->": 101,
        "&": 102,
        "dictionary_comprehension": 103,
        "{": 104,
        "pair": 105,
        "}": 106,
        "*=": 107,
        "break_statement": 108,
        "if_statement": 109,
        "if_clause": 110,
        "continue_statement": 111,
        "global_statement": 112,
        "global": 113,
        "generic_type": 114,
        "type_parameter": 115,
        "concatenated_string": 116,
        "%=": 117,
        "dictionary": 118,
        ";": 119,
        ">>": 120,
        "is not": 121,
        "is": 122,
        "@": 123,
        "list_splat_pattern": 124,
        "set": 125,
        "generator_expression": 126,
        ">>=": 127,
        "delete_statement": 128,
        "del": 129,
        "^=": 130,
        "try": 131,
        "pass": 132,
        "^": 133,
        "raise": 134,
        "interpolation": 135,
        "finally": 136,
        "**=": 137,
        "not in": 138,
        "|": 139,
        "future_import_statement": 140,
        "__future__": 141,
        "/=": 142,
        "~": 143,
        "pass_statement": 144,
        "raise_statement": 145,
        "format_specifier": 146,
        "assert_statement": 147,
        "assert": 148,
        "|=": 149,
        "dictionary_splat": 150,
        "set_comprehension": 151,
        "<<=": 152,
        "typed_default_parameter": 153,
        "&=": 154,
        "dictionary_splat_pattern": 155,
        "member_type": 156,
        "as_pattern": 157,
        "as_pattern_target": 158,
        "\\": 159,
        "decorator": 160,
        "named_expression": 161,
        ":=": 162,
        "except": 163,
        "ellipsis": 164,
        "with": 165,
        "type_alias_statement": 166,
        "with_clause": 167,
        "with_item": 168,
        "nonlocal_statement": 169,
        "nonlocal": 170,
        "case": 171,
        "keyword_separator": 172,
        "type_conversion": 173,
        "with_statement": 174,
        "match": 175,
        "<>": 176,
        "chevron": 177
    },
    "next_node_type_id": 178,
    "node_vocab_size": 2000
}